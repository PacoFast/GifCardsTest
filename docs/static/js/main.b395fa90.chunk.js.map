{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","console","log","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","filteredData","map","d","id","title","imageUrl","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","isLoading","state","setState","useEffect","then","categories","setTimeout","catch","warn","useFetchGif","image","GiftExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBACIC,SAXa,SAAAC,GACjBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAACS,GAAD,OAAQP,GAAR,mBAAuBO,OACtCN,EAAc,IACdO,QAAQC,IAAI,aAKhB,SAGI,uBACIC,KAAK,OACLC,MAAOX,EACPY,SArBc,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0FAEoEC,UAAUH,GAF9E,sBAGDI,MAAMF,GAHL,cAGbG,EAHa,gBAIIA,EAAIC,OAJR,uBAIXC,EAJW,EAIXA,KAEFC,EAAeD,EAAKE,KAAI,SAACC,GAAD,YAAQ,CAClCC,GAAID,EAAEC,GACNC,MAAOF,EAAEE,MACTC,SAAQ,UAAEH,EAAEI,cAAJ,aAAE,EAAUC,iBAAiBb,QATtB,kBAYZM,GAZY,4CAAH,sDCEPQ,EAAc,SAAC,GAAuB,IAAtBJ,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAChC,OACI,qBAAII,UAAU,YAAd,UACI,6BAAKL,IACL,qBAAKM,IAAKL,EAAUM,IAAKP,EAAQ,mBCFhCQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAUtB,ECXuB,SAACA,GACxB,MAA0BhB,mBAAS,CAC/BuB,KAAM,GACNc,WAAW,IAFf,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAhBAC,qBAAU,WAENzB,EAAQC,GAAUyB,MAAM,SAAAC,GAEpBC,YAAW,WAEPJ,EAAS,CACLhB,KAAMmB,EACNL,WAAW,MAEhB,SAENO,MAAMnC,QAAQoC,QAChB,CAAC7B,IAGGsB,EDX0BQ,CAAY9B,GAAjCc,EAAZ,EAAOP,KAAac,EAApB,EAAoBA,UAIpB,OACI,qCACKA,GAAa,kDACd,oBAAIJ,UAAU,QAAd,SAAuBjB,IACvB,oBAAIiB,UAAU,OAAd,gBACKH,QADL,IACKA,OADL,EACKA,EAAQL,KAAK,SAAAsB,GAAK,OAAI,cAAC,EAAD,eAAgCA,GAAdA,EAAMpB,aEnBlDqB,EAAgB,WAEzB,MAAoChD,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACI,qCACI,+CACA,cAAC,EAAD,CACIA,cAAeA,IAEnB,uBACA,8CACA,qBAAKkC,UAAU,YAAf,SACKS,EAAWjB,KAAK,SAACT,GAAD,OAAc,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCZ7DiC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b395fa90.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'; \r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState(''); \r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value); \r\n    }; \r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault(); \r\n        if( inputValue.trim().length > 2 ){\r\n            setCategories( (c) => [inputValue, ...c] ); \r\n            setInputValue(''); \r\n            console.log(\"Enviado\"); \r\n        }\r\n    }\r\n\r\n    return (\r\n        <form\r\n            onSubmit = {handleSubmit}\r\n        >\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange = {handleInputChange}\r\n            />         \r\n        </form>\r\n    ); \r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired, \r\n}\r\n\r\n","export const getGifs = async (category) => {\r\n    const url =\r\n        `https://api.giphy.com/v1/gifs/search?api_key=Ryvq8zhSXmgZNK9ECYRvA5SeYdhN7tOR&q=${encodeURI(category)}&limit=10`;\r\n    const res = await fetch(url);\r\n    const { data } = await res.json();\r\n\r\n    const filteredData = data.map((d) => ({\r\n        id: d.id,\r\n        title: d.title,\r\n        imageUrl: d.images?.downsized_medium.url,\r\n    }));\r\n\r\n    return filteredData; \r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, imageUrl}) => {\r\n    return (\r\n        <li className=\"grid-item\">\r\n            <h3>{title}</h3>\r\n            <img src={imageUrl} alt={title + \"imagen gif\"} />\r\n        </li>\r\n    )\r\n}\r\n","import React, {} from \"react\";\r\nimport { useFetchGif } from \"../hooks/useFetchGif\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    // const [images, setImages] = useState([]);\r\n\r\n    //componentDidMount solo se ejecuta cuando se mande a renderizar el componente\r\n    // useEffect(() => {\r\n    //     getGifs(category).then( setImages )\r\n    //     .catch(console.warn)\r\n    // }, [category]);\r\n\r\n\r\n    const {data:images, isLoading} = useFetchGif(category); \r\n\r\n    // console.log(`component ${images.length}`); \r\n\r\n    return (\r\n        <>\r\n            {isLoading && <p>Cargando datos...</p>}\r\n            <h2 className=\"title\">{category}</h2>\r\n            <ul className=\"grid\">\r\n                {images?.map( image => <GifGridItem key={image.id} {...image}/> )}\r\n            </ul>\r\n        </>\r\n    );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGif = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [], \r\n        isLoading: true, \r\n    }); \r\n    // console.log('hola')\r\n    useEffect(()=> {\r\n        // console.log('useEffect'); \r\n        getGifs(category).then( categories => {\r\n            // console.log('promesa')\r\n            setTimeout(() => {\r\n                //se utiliza useEffect porque al cambiar el useState se recarga todo de nuevo\r\n                setState({\r\n                    data: categories, \r\n                    isLoading: false\r\n                }); \r\n            }, 1500); \r\n        } )\r\n        .catch(console.warn); \r\n    }, [category])\r\n    // console.log('despues de la promesa'); \r\n\r\n    return state; \r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GiftExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([\"One Punch\"]); \r\n\r\n    return (\r\n        <>\r\n            <h1>GiftExpertApp</h1> \r\n            <AddCategory\r\n                setCategories={setCategories}\r\n            />\r\n            <hr/>\r\n            <button>Add Hero</button>\r\n            <div className=\"container\">\r\n                {categories.map( (category) => <GifGrid key={category} category={category} /> )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiftExpertApp } from './GiftExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GiftExpertApp/>, \n  document.getElementById('root')\n);"],"sourceRoot":""}